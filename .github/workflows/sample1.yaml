#apply test
---
name: runner-eks
on:
  pull_request:
    branches: [ main ]
    types: [opened, reopened]
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      my_input:
        description: 'Enter a value'
        required: true
        default: 'defaultValue'

jobs:
  deploy:
    name: ubuntu
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Upload my_env as artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-env-artifact
        path: apm
    - name: getting location
      run: |
        pwd
        ls -al
        env
    - name: Checkout
      uses: actions/checkout@main
    - name: setting variable
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          # Extract the third segment from the PR branch name
          PART=$(echo "${{ github.head_ref }}" | awk -F'/' '{print $3}')
          echo "MY_VAR=$PART" >> $GITHUB_ENV
        elif [[ "${{ github.event_name }}" == "push" ]]; then
          COMMIT_MSG=$(git log --format=%B -n 1 $GITHUB_SHA)
          # Extract the third segment from the merge commit message
          EXTRACTED_VALUE=$(echo $COMMIT_MSG | grep -oP 'from [^/]+/[^/]+/[^/]+/\K[^/]+')
          echo "MY_VAR=$EXTRACTED_VALUE" >> $GITHUB_ENV
        else
          echo "MY_VAR=${{ github.event.inputs.my_input }}" >> $GITHUB_ENV
        fi
    - name: Set MY_VAR as output
      id: outputvar
      run: echo "::set-output name=MY_VAR_OUTPUT::${MY_VAR}"
    - name: getting location
      run: |
        pwd
        env
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    # - name: Configure AWS credentials from Test account
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     role-to-assume: arn:aws:iam::781827335746:role/action-runner
    #     aws-region: us-east-2
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    # - name: Set MY_ENV as env var and Use it
    #   if: github.event_name == 'push'
    #   run: |
    #     echo "MY_VAR=$(cat apm/apm)" >> $GITHUB_ENV
    #     env
    outputs:
      my_var: ${{ steps.outputvar.outputs.MY_VAR_OUTPUT }}
  call-terraform-apply:
    if: github.event_name == 'push'
    needs: deploy
    with:
      my_var: ${{ needs.deploy.outputs.my_var }}
    uses: ./.github/workflows/pushdocker.yaml
    secrets: inherit
    
      
